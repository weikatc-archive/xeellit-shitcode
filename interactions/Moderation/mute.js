const { isMod, parseDuration } = require('../../client/util')
const { SnowflakeUtil, MessageActionRow, MessageSelectMenu } = require('discord.js')
const Mute = require('../../classes/Mute')

module.exports = {
    aliases: ['–ó–∞–≥–ª—É—à–∏—Ç—å'],
    guildOnly: true,
    config: {
        name: 'mute',
        description: '–ó–∞–≥–ª—É—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö',
        options: [{
            name: '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–≥–ª—É—à–∏—Ç—å',
            required: true,
            type: 6,
        }, {
            name: '–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
            description: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞',
            type: 3
        }, {
            name: '–ø—Ä–∏—á–∏–Ω–∞',
            description: '–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ò–¥–µ—Ç –≤ –º–æ–¥–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –ª–æ–≥',
            type: 3
        }]
    },
    async execute(interaction) {
        const reply = str => interaction.reply({ content: str, ephemeral: true })
        if (!interaction.guild.members.me.permissions.has('MANAGE_ROLES')) return reply('–ú–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–∞–≤–æ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...')
        if (!isMod(interaction, 'MANAGE_MESSAGES')) return reply('–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á–µ–º —Ç—ã –¥—É–º–∞–ª, –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –¢–∞–∫ –≤–æ—Ç, –ø–æ–¥—É–º–∞—é –∑–∞ —Ç–µ–±—è. –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤')

        const member = interaction.options.get('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')?.member || interaction.options.get('user')?.member
        if (!member) return reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')

        if (member.id === interaction.user.id) return reply('–ó–∞—á–µ–º –∂–µ —Ç—ã –ø—ã—Ç–∞–µ—à—å—Å—è –∑–∞–º—É—Ç–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è?')
        if (member.id === xee.client.user.id) return reply('–ü–æ—á–µ–º—É —Ç—ã –ø—ã—Ç–∞–µ—à—å—Å—è –º–µ–Ω—è –∑–∞–º—É—Ç–∏—Ç—å? üò®')

        if (isMod(interaction, 'MANAGE_MESSAGES', member)) return reply(`**${member.user.tag}** –º–æ–¥–µ—Ä–∞—Ç–æ—Ä. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∞—Ç—å —Å–≤–æ–∏—Ö –∫–æ–ª–ª–µ–≥.`)
        if (!(interaction.member.roles.highest.comparePositionTo(member.roles.highest) > 0)) return reply(`–í–∞—à–∞ –≤—ã—Å—à–∞—è —Ä–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ, —á–µ–º —É **${member.user.tag}**.`)

        if (!interaction.guild.data.muteRole) return reply(`–†–æ–ª–∏ –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è. –ß—Ç–æ–±—ã –Ω–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å –∑–∞–≥—Ä—É—à–µ–Ω–∏—è: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`${interaction.guild.data.prefixes[0]?.name}mutes <@—Ä–æ–ª—å>\``)
        if (!interaction.guild.data.muteRole.editable) return reply('–†–æ–ª—å –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤—ã—à–µ –∏–ª–∏ –Ω–∞ –æ–¥–Ω–æ–π –≤—ã—Å–æ—Ç–µ —Å–æ –º–Ω–æ–π. –ü—Ä–∏–∫–æ–ª—å–Ω–æ!')

        const reasons = await xee.db.collection('reasons').find({
            guild: interaction.guild.id,
            type: 'mute'
        }).toArray()

        const _duration = interaction.options.get('–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')?.value
        let reason = interaction.options.get('–ø—Ä–∏—á–∏–Ω–∞')?.value

        const mute = interaction.guild.data.mutes.find(mute => mute.memberId === member.id)
        const _remain = mute?.remain
        const roles = []

        let duration = parseDuration(_duration) || 63115200000

        if (reasons.length) {
            if (!_duration && !reason) {
                await interaction.reply({
                    content: `–¢–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É –∑–∞–≥–ª—É—à–µ–Ω–∏—è **${member.user.tag}**, –≤—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë –∏–∑ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:`,
                    components: [
                        new MessageActionRow()
                            .addComponents(
                                new MessageSelectMenu() 
                                    .setCustomId(interaction.id + '-reason')
                                    .setPlaceholder('–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è')
                                    .addOptions(
                                        reasons.map(({ reason, time }, index) => ({
                                            description: `–ó–∞–≥–ª—É—à–µ–Ω–∏–µ –Ω–∞ ${xee.constructor.ruMs(parseDuration(time))}`,
                                            value: index.toString(),
                                            label: reason
                                        }))
                                    )
                            )
                    ]
                })

                const selected = await interaction.channel.awaitMessageComponent({
                    filter: c => c.user.id === interaction.user.id && c.message.interaction.id === interaction.id,
                    idle: 120000
                }).catch(() => null)

                if (!selected) return interaction.deleteReply()
                const _reason = reasons[+selected?.values.shift()]
                duration = parseDuration(_reason.time)
                reason = _reason.reason
            } else if (reason && !_duration) {
                const _reason = reasons.find(r => r.reason.toLowerCase().includes(reason))
                if (_reason) {
                    duration = parseDuration(_reason.time)
                    reason = _reason.reason
                }
            }
        }

        if (_remain) duration += _remain
        if (duration > 63115200000) return reply('–í—Ä–µ–º—è –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ, —á–µ–º 2 –≥–æ–¥–∞.')
        if (duration < 10000) return reply('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è ‚Äî 10 —Å–µ–∫—É–Ω–¥. –î–µ—Ä–∂—É –≤ –∫—É—Ä—Å–µ.')

        if (mute) {
            await mute.purge()
            mute.clearTimeout()
        } else await Promise.all([
            roles.length && member.roles.remove(roles),
            member.roles.add(
                interaction.guild.data.muteRole,
                `–∑–∞–≥–ª—É—à–µ–Ω–∏–µ –Ω–∞ ${xee.constructor.ruMs(duration)} [${interaction.user.tag}]`
            ),
        ].filter(Boolean))

        if (interaction.guild.data.autoHardMute) {
            for (const role of [...member.roles.cache.values()]) {
                if (role.editable && ![
                    interaction.guild.roles.everyone.id,
                    interaction.guild.data.muteRole.id
                ].includes(role.id)) roles.push(role.id)
            }
        }

        const data = new Mute(interaction.guild, {
            member: member.id,
            time: Date.now() + duration,
            id: SnowflakeUtil.generate(),
            roles: mute ? mute.roles : roles,
            reason: reason || null,
        })

        await data.save()
        data.setTimeout()

        interaction.guild.data.entries.createCase(mute ? 'muteTime' : 'mute', member, interaction.member, {
            reason: data.reason, time: mute && _remain || duration
        })

        (interaction.replied && interaction.editReply || interaction.reply).bind(interaction)({
            content: (mute ? 
                `–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ **${member.user.tag}** –±—ã–ª –ø—Ä–æ–¥–ª—ë–Ω –º—É—Ç –Ω–∞ **${xee.constructor.ruMs(duration - _remain)}**.` : 
                `–£—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ **${member.user.tag}** –ø–æ–ª—É—á–∏–ª –º—É—Ç –Ω–∞ **${xee.constructor.ruMs(duration)}**`
            ) + `${data.reason ? `\n–ü—Ä–∏—á–∏–Ω–∞: \`${data.reason.slice(0, 600)}\`` : ''}`,
            components: []
        })
    }
}