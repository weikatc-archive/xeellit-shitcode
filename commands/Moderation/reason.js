const { isMod } = require('../../client/util')

module.exports = {
    command: {
        description: '–∏–∑–º–µ–Ω—è–µ—Ç –ø—Ä–∏—á–∏–Ω—É –º–æ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–ª—É—á–∞—è',
        usage: '<—Å–ª—É—á–∞–π> <–ø—Ä–∏—á–∏–Ω–∞>',
        examples: {
            '{{prefix}}reason 1 –°–ø–∞–º —Ö–∑ –≥–¥–µ': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø—Ä–∏—á–∏–Ω—É –∫–µ–π—Å–∞ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º 1'
        }
    },
    execute: async function (message, args, options) {
        if (!isMod(message, 'MANAGE_MESSAGES')) return message.channel.send('–ê —Ç–≤–æ–∏ –ø—Ä–∞–≤–∞ –≥–¥–µ...?')
        if (!message.guild.data.modLogsChannel?.permissionsFor(message.guild.me)?.has('READ_MESSAGE_HISTORY')) return message.channel.send('–ù—É–∂–Ω–æ —á—Ç–æ–±—ã –∫–∞–Ω–∞–ª –º–æ–¥–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –ª–æ–≥–æ–≤ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.')
        if (!args.length) return message.channel.send(xee.commands.help(this, options.prefix))

        const caseId = Math.floor(+args.shift())
        if (isNaN(caseId) || !isFinite(caseId)) return message.channel.send('–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ?')

        const —Åase = await xee.db.collection('cases').findOne({ guild: message.guild.id, caseId })
        if (!—Åase) return message.channel.send('–¢–∞–∫–æ–≥–æ –∫–µ–π—Å–∞ –Ω–µ—Ç –∏–ª–∏ –±—ã–ª —É—Ç–µ—Ä–µ–Ω')

        if (!args.length) return message.channel.send('–ê –Ω–æ–≤—É—é –ø—Ä–∏—á–∏–Ω—É...?')

        const reason = args.join(' ').slice(0, 1024)
        const caseMessage = await message.guild.data.modLogsChannel.messages.fetch(—Åase.messageId).catch(() => null)
        if (caseMessage?.embeds.length) {
            const embed = caseMessage.embeds[0]
            embed.fields.at(-1).value = reason

            await caseMessage.edit(embed)
        }

        await xee.db.collection('cases').updateOne({ caseId, guild: message.guild.id }, { $set: { reason } })
        return message.channel.permissionsFor(message.guild.me).has([ 'ADD_REACTIONS', 'READ_MESSAGE_HISTORY' ]) ? xee.react(message, 'üëå') : message.channel.send('üëå')
    }
}