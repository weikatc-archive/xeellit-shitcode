const { findMember, isMod, parseDuration, selectReason } = require('../../client/util')

const Confirmation = require('../../classes/Confirmation')
const { SnowflakeUtil } = require('discord.js')

module.exports = {
    command: {
        description: '–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
        usage: '<@—é–∑–µ—Ä> [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]',
        aliases: ['b'],
        flags: ['force'],
        examples: {
            '{{prefix}}ban @JuniperBot': '–∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **@JuniperBot**',
            '{{prefix}}ban 159985870458322944 10d': '–∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID **159985870458322944** –Ω–∞ 10 –¥–Ω–µ–π'
        },
        permissions: {
            me: ['BAN_MEMBERS']
        }
    },
    execute: async function (message, args, options) {
        if (!args.length) return message.channel.send(xee.commands.help('ban', options.prefix))

        const id = args.shift()
        const member = await findMember(message, id) || /^\d{17,19}$/.test(id) && await xee.client.users.fetch(id).catch(() => null)
        const username = member?.tag ?? member?.user?.tag

        if (!member) return message.channel.send(`–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å.`)
        if (member.id === message.author.id) return message.channel.send('–ó–∞—á–µ–º —Ç—ã –ø—ã—Ç–∞–µ—à—å—Å—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è? –î—É—Ä–∏–∫...')
        if (member.id === xee.client.user.id) return message.channel.send('–ù–µ –Ω—É–∂–Ω–æ –ø—ã—Ç–∞—Ç—å—Å—è –º–µ–Ω—è –∑–∞–±–∞–Ω–∏—Ç—å, –≤–µ–¥—å —è –Ω–µ –º–æ–≥—É —ç—Ç–æ–≥–æ —Å–¥–µ–ª–∞—Ç—å...')
        if (!isMod(message, 'BAN_MEMBERS')) return message.channel.send(xee.random([
            '‚ôªÔ∏è **{{member}}** –±—ã–ª —É—Ç–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º **{{author}}**',
            'üïØÔ∏è **{{member}}** –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º **{{author}}**'
        ]).parse({ author: message.author.tag, member: username }) + ' –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')

        if (member.guild) {
            if (!member.bannable) return message.channel.send(`–ú–æ—è –Ω–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å –Ω–∏–∂–µ, —á–µ–º –Ω–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å **${member.user.tag}**. –ó–∞–±–∞–Ω–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.`)
            if (!options.warn && message.author.id !== message.guild.ownerId) {
                if (isMod(message, 'BAN_MEMBERS', member) && (
                    message.member.permissions.has('ADMINISTRATOR') ? 
                        member.permissions.has('ADMINISTRATOR')
                    : true
                )) return message.channel.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å **${member.user.tag}**, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.`)
                if (!(message.member.roles.highest.comparePositionTo(member.roles.highest) > 0)) return message.channel.send(`–í–∞—à–∞ –≤—ã—Å—à–∞—è —Ä–æ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ, —á–µ–º —É **${member.user.tag}**.`)
            }
        }

        const bans = await message.guild.bans.fetch()
        if (bans && bans.some(x => x.user && x.user.id === member.id)) return message.channel.send(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${username}** –±—ã–ª —Ä–∞–Ω–µ–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.`)

        if (!args.length && !message._flags.has('force')) {
            const reasons = await xee.db.collection('reasons').find({ guild: message.guild.id, type: 'ban' }).toArray()
            if (reasons?.length) {
                const reason = reasons[
                    await selectReason('ban', message, {
                        content: `–¢–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ **${username}**, –≤—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –µ—ë –∏–∑ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞:`,
                        placeholder: '–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏',
                        user: message.author.id,
                        menuOptions: reasons.map(({ reason, time }, index) => ({
                            description: time ? `–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–∞ ${xee.constructor.ruMs(parseDuration(time))}` : '–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞',
                            label: reason,
                            value: index.toString()
                        }))
                    })
                ]

                if (!reason) return
                message._flags.add('force')
                args = [ reason.time, reason.reason ].filter(c => c !== undefined)
            }
        }

        const banTime = parseDuration(args[0])
        if (banTime) {
            args.shift()
            if (banTime < 1e4) return message.channel.send('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –±–∞–Ω–∞: 10 —Å–µ–∫—É–Ω–¥')
            if (banTime > 63115200000) return message.channel.send('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –±–∞–Ω–∞: 2 –≥–æ–¥–∞')
        }

        const reason = args.join(' ')
        const banOptions = { reason: `${reason?.slice(0, 509 - message.author.tag.length)} [${message.author.tag}]`, days: message._flags.has('messages') ? 7 : 0 }
        if (!options.message) options.message = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **${member.user?.tag || member.tag}** –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ${banTime ? ` –Ω–∞ **${xee.constructor.ruMs(banTime)}**` : ''}.\n${reason ? `–ü—Ä–∏—á–∏–Ω–∞: \`${reason.slice(0, 600)}\`` : ''}`

        const answer = await (
            new Confirmation(message)
                .setContent(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **${username}**${banTime ? ` –Ω–∞ ${xee.constructor.ruMs(banTime)}` : ''}${args.length ? ` –ø–æ –ø—Ä–∏–Ω–∏–Ω–µ \`${reason.slice(0, 100)}\`` : ''}?`)
                .awaitResponse()
        )

        if (!answer.data) return answer.reply('–õ–∞–¥–Ω–æ, –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
        message.guild.members.ban(member.id, banOptions)
            .then(async () => {
                answer.reply(options.message)

                if (banTime) {
                    const banId = SnowflakeUtil.generate()
                    await xee.db.collection('bans').insertOne({ _id: banId, user: member.id, guild: message.guild.id, end: Date.now() + banTime })
                    await xee.rest.kaneki.api.bot.ban.post({ json: { id: banId } })
                }
    
                if (!options.warn) message.guild.data.entries.createCase('ban', member, message.member, {
                    time: banTime,
                    reason
                })
            })
    }
}
