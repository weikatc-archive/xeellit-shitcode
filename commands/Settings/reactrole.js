const { MessageEmbed, Util, SnowflakeUtil } = require('discord.js')
const { parseEmoji } = require('../../client/util')
const { findByName } = require('../../client/finder')

const Pagination = require('../../classes/Pagination')
const Confirmation = require('../../classes/Confirmation')

const modes = { normal: '–æ–±—ã—á–Ω—ã–π', single: '–æ–¥–∏–Ω–æ—á–Ω—ã–π' }

module.exports = {
    command: {
        description: '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é —Ä–µ–∞–∫—Ü–∏–π',
        fullDescription: '**–†–µ–∂–∏–º—ã**:\n> `normal`: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º. –ü–æ–∑–≤–æ–ª—è–µ—Ç –±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π –Ω–∞ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.\n> `single`: –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º. –ü–æ–∑–≤–æ–ª—è–µ—Ç –±—Ä–∞—Ç—å –æ–¥–Ω—É —Ä–æ–ª—å —Å —Å–æ–æ–±—â–µ–Ω–∏—è.\n',
        flags: ['add', 'remove', 'once'],
        usage: '[delete | clear | single | normal | :emoji:] <message-id> <@role | emoji>',
        examples: {
            '{{prefix}}reactrole': '–ø–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
            '{{prefix}}reactrole delete 632419521768194048': '—É–¥–∞–ª–∏—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ 632419521768194048',
            '{{prefix}}reactrole delete 708310803006357584 :v:': '—É–¥–∞–ª–∏—Ç —ç–ª–µ–º–µ–Ω—Ç —Å —ç–º–æ–¥–∑–∏ :v: –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ 708310803006357584',
            '{{prefix}}reactrole :v: 806368182570582036 –ë–æ–π—á–∏–∫': '–Ω–∞–∑–Ω–∞—á–∏—Ç —Ä–µ–∞–∫—Ü–∏—é :v: –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ 806368182570582036 –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–∏ **–ë–æ–π—á–∏–∫**',
            '{{prefix}}reactrole clear': '—É–¥–∞–ª–∏—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞',
            '{{prefix}}reactrole single 824497955829710859': '–≤–∫–ª—é—á–∏—Ç –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º —É —Å–æ–æ–±—â–µ–Ω–∏—è 824497955829710859'
        },
        aliases: ['reactionrole', 'rero', 'rr'],
        permissions: {
            me: ['EMBED_LINKS', 'MANAGE_ROLES', 'ADD_REACTIONS', 'READ_MESSAGE_HISTORY'],
            user: ['MANAGE_GUILD']
        }
    },
    execute: async function (message, args, options) {
        const elements = message.guild.data.reactroles.filter(r => message.guild.channels.cache.has(r.channel) && message.guild.roles.cache.has(r.role))

        let confirm
        let _elements

        switch (args[0]?.toLowerCase()) {
            case undefined:
                if (!elements.size) return message.channel.send(`–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç —Ä–æ–ª–µ–π –∑–∞ —Ä–µ–∞–∫—Ü–∏–∏, –Ω–æ —Ç—ã –∏—Ö –º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π \`${options.prefix}help reactrole\``)

                let interface = new Pagination(message.author.id)
                Util.splitMessage(elements.map(rr => `**<#${rr.channel}>**: [[—Å–æ–æ–±—â–µ–Ω–∏–µ]](https://discord.com/channels/${rr.guild}/${rr.channel}/${rr.message}): <@&${rr.role}>: ${rr.emoji.includes(':') ? `<${rr.emoji.startsWith('a') ? '' : ':'}${rr.emoji}>` : decodeURI(rr.emoji)}\n\u2514 –†–µ–∂–∏–º: ${rr.mode ? modes[rr.mode] : '–æ–±—ã—á–Ω—ã–π'}`)
                .join('\n'), { char: '\n', maxLength: 1800 })
                    .forEach(value => 
                        interface.add({
                            embeds: [
                                new MessageEmbed()
                                    .setAuthor({ name: '–†–æ–ª–∏ –∑–∞ —Ä–µ–∞–∫—Ü–∏–∏', iconURL: message.guild.iconURL({ size: 2048, dynamic: true }) })
                                    .setColor(xee.settings.color)
                                    .setDescription(value)
                            ]
                        }))
                return interface.send(message.channel)

            case 'clear':
            case 'bulk':
            case 'reset':
                if (!elements.size) return message.channel.send('–°—Ç—Ä–∞–Ω–Ω–æ, –∑–¥–µ—Å—å –∏ —Ç–∞–∫ —á–∏—Å—Ç–æ...')
                const data = await (new Confirmation(message).setContent( `–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å **${elements.size}** —Ä–æ–ª–∏ –∑–∞ —Ä–µ–∞–∫—Ü–∏–∏?`).awaitResponse(true))
                if (!data) return message.channel.send(':ok_hand:')

                await xee.db.collection('reactroles').deleteMany({ guild: message.guild.id })
                await elements.forEach(rr => xee.store.reactroles.delete(rr._id))
                return message.channel.send('üßπ')

            case 'delete':
            case 'remove':
                if (!args[1]) return message.channel.send('–•–æ—Ç—è –±—ã —É–∫–∞–∂–∏ ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∞...?')
                if (!+args[1]) return message.channel.send('–ü–æ—á–µ–º—É-—Ç–æ —ç—Ç–æ –Ω–µ —Å–∏–ª—å–Ω–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ ID')
                let deleteElements = elements.filter(rr => rr.message === args[1].toLowerCase())
                if (!deleteElements.size) return message.channel.send(`–•–æ—á–µ—à—å —É–¥–∏–≤–ª—é? –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ **${args[1].slice(0, 30)}** –Ω–µ—Ç. –ê –∫—Å—Ç–∞—Ç–∏, —Ç–∞–∫–æ–π ID –≤–æ–æ–±—â–µ –µ—Å—Ç—å...?`)

                if (!args[2]) {
                    confirm = await (
                        new Confirmation(message)
                            .setContent(`–†–∞–∑ —É–∂ —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª —ç–º–æ–¥–∑–∏, —Ç–æ —è —Ç–µ–±–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º **${deleteElements.first().message}** (–∏—Ö ${deleteElements.size}). –¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –∏—Ö —É–¥–∞–ª–∏—Ç—å?`)
                            .awaitResponse()
                    )
                    if (!confirm.data) return confirm.message.delete().catch(() => null)

                    await deleteElements.forEach(rr => xee.store.reactroles.delete(rr._id))
                    await xee.db.collection('reactroles').deleteMany({ message: deleteElements.first().message, channel: deleteElements.first().channel })
                    return confirm.message.edit(`–£–¥–∞–ª–∏–ª –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º **${deleteElements.first().message}**`).catch(() => null)
                }

                const deleteEmoji = parseEmoji(args.slice(2).join(' '))
                if (!deleteEmoji) return message.channel.send(`–ß—Ç–æ-—Ç–æ **${args.slice(2).join(' ').slice(0, 40)}** –Ω–µ –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–µ –Ω–∞ —ç–º–æ–¥–∑–∏, –∏–ª–∏ –Ω–µ—Ç...`) 
                deleteElements = deleteElements.find(rr => rr.emoji === (deleteEmoji.id ? `${deleteEmoji.animated ? 'a:' : ''}${deleteEmoji.name}:${deleteEmoji.id}` : encodeURI(deleteEmoji.name)))
                if (!deleteElements) return message.channel.send('–ü–æ –º–æ–µ–º—É, —Ç–∞–∫–æ–≥–æ –Ω–µ—Ç—É. –ê –µ—Å–ª–∏ –¥–∞–∂–µ –∏ –µ—Å—Ç—å, —Ç–æ —è –Ω–µ –∑–Ω–∞–ª')
                xee.db.collection('reactroles').deleteOne({ _id: deleteElements._id })
                xee.store.reactroles.delete(deleteElements._id)
                return message.channel.send('–•–æ—Ä–æ—à–æ, —è —É–¥–∞–ª–∏–ª')

            case 'single':
                if (!args[1]) return message.channel.send('–ù–∞ –∫–∞–∫–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–Ω–µ –≤–∫–ª—é—á–∞—Ç—å –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º?')
                if (!+args[1]) return message.channel.send('–ù–µ –¥—É–º–∞—é —á—Ç–æ —ç—Ç–æ ID')
                _elements = elements.filter(rr => rr.message === args[1])
                if (!_elements.size) return message.channel.send('–£ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤')
                if (_elements.size < 2) return message.channel.send('–û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω —É —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º')
                if (_elements.first().mode === 'single') return message.channel.send('–≠—Ç–æ—Ç —Ä–µ–∂–∏–º —É–∂–µ –≤–∫–ª—é—á–µ–Ω –Ω–∞ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. („Éªo„Éª)')
                _elements.forEach(element => element.mode = 'single')
                xee.db.collection('reactroles').updateMany({ channel: _elements.first().channel, message: _elements.first().message }, { $set: { mode: 'single' } })
                return message.channel.send(`–û–¥–∏–Ω–æ—á–Ω—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω —É –≤—Å–µ—Ö —ç–ª–µ–º–µ—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è ${_elements.first().message}`)

             case 'normal':
                if (!args[1]) return message.channel.send('–¢—ã –¥—É–º–∞–µ—à—å —è –¥–ª—è —Ç–µ–±—è —à—É—Ç–∫–∞?')
                if (!+args[1]) return message.channel.send('–ù–µ –ø–æ—Ö–æ–∂–µ —ç—Ç–æ –Ω–∞ ID')
                _elements = elements.filter(rr => rr.message === args[1])
                if (!_elements.size) return message.channel.send('–£ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤')
                if (_elements.size < 2) return message.channel.send('–ó–∞—á–µ–º? –£ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç')
                if (_elements.first().mode === 'normal') return message.channel.send('–£ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —è —Ç–∞–∫ –±—ã–ª –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º')
                _elements.forEach(element => element.mode = 'normal')
                xee.db.collection('reactroles').updateMany({ channel: _elements.first().channel, message: _elements.first().message }, { $set: { mode: 'normal' } })
                return message.channel.send(`–û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω —É –≤—Å–µ—Ö —ç–ª–µ–º–µ—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è ${_elements.first().message}`)

            default: 
                const _emoji = args.shift()
                const emoji = parseEmoji(_emoji)
                if (!emoji) return message.channel.send(`–í–æ–∑–º–æ–∂–Ω–æ, —ç–º–æ–¥–∑–∏ **${_emoji.slice(0, 50)}** –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –≥–¥–µ –Ω–µ—Ç –º–µ–Ω—è, –∞ –º–æ–∂–µ—Ç –∏ –ø—Ä–æ—Å—Ç–æ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...`)

                const _id = message.reference ? message.reference.messageId : args.shift()
                if (!_id) return message.channel.send('–¢–µ–∫—É—â–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç: –∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ **—ç—Ç–æ–º** –∫–∞–Ω–∞–ª–µ')
                if (!message.channel.permissionsFor(message.member).has('READ_MESSAGE_HISTORY')) return message.channel.send('–°–µ–π—á–∞—Å —è –¥–æ–ª–∂–µ–Ω –±—ã–ª –Ω–∞–π—Ç–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ù–æ –≤–æ—Ç –±–µ–¥–∞, —è –Ω–µ –º–æ–≥—É —á–∏—Ç–∞—Ç—å –∑–¥–µ—Å—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π')

                const reactM = await message.channel.messages.fetch(_id).catch(() => null)
                if (!reactM) return message.channel.send(`–¢—ã —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID **${_id.slice(0, 30)}** —Å—É—â–µ—Å—Ç–≤—É–µ—Ç? –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`)
                if (elements.some(rr => rr.message === reactM.id && 
                    rr.emoji === (emoji.id ? `${emoji.animated ? 'a:' : ''}${emoji.name}:${emoji.id}` : encodeURI(emoji.name)))) return message.channel.send('–≠–ª–µ–º–µ–Ω—Ç –Ω–∞ —ç—Ç—É —Ä–µ–∞–∫—Ü–∏—é —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

                if (!args.length) return message.channel.send(`–ù—É –≤–æ—Ç –¥–æ–ø—É—Å—Ç–∏–º –ª—é–¥–∏ –±—É–¥—É—Ç –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é, –¥–∞. –ò —á—Ç–æ –æ–Ω–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å? –†–æ–ª—å everyone? :clown:`)

                const role = await findByName(message.guild.roles.cache, args.join(' '))
                if (!role) return message.channel.send(`–†–æ–ª–∏ **${args.join(' ').slice(0, 40)}** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç. –ü–µ—á–∞–ª—å–Ω–æ.`)
                if (role.id === message.guild.roles.everyone.id) return message.channel.send('–≠—Ç–∞ —Ä–æ–ª—å –¥–∞—ë—Ç—Å—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫, –Ω–µ –ø–æ —Ä–µ–∞–∫—Ü–∏–∏...')

                if (role.tags) {
                    if (role.tags.botId) return message.channel.send(`–†–æ–ª—å **${role.name}** –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –±–æ—Ç—É **${(await xee.client.users.fetch(role.tags.botId)).tag}**.`)
                    if (role.tags.premiumSubscriberRole) return message.channel.send(`–†–æ–ª—å **${role.name}** –≤—ã–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –±—É—Å—Ç–µ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞...`)
                }

                if (role.managed) return message.channel.send(`–†–æ–ª—å **${role.name}** —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫–∞–∫–æ–π-—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π.`)
                if (!role.editable) return message.channel.send('–†–æ–ª—å –≤—ã—à–µ –º–µ–Ω—è. –ü–æ –ª–æ–≥–∏–∫–µ, —è –Ω–µ —Å–º–æ–≥—É –µ—ë –≤—ã–¥–∞–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º. –≠—Ç–æ –∂–µ –ª–æ–≥–∏—á–Ω–æ...')

                if (
                    (message.member.roles.cache.size !== 1 && role.position >= message.member.roles.highest.position) 
                    && message.author.id !== message.guild.ownerId
                ) return message.channel.send('–ü—Ä–æ—Å—Ç–∏, –≤–∑–ª–æ–º–∞—Ç—å –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è... –¢—ã –Ω–∏–∂–µ —ç—Ç–æ–π —Ä–æ–ª–∏, –¥–∞...')
                if (elements.some(rr => rr.role === role.id && rr.message === reactM.id)) return message.channel.send(`–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ **${role.name}** —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ ${reactM.id}`)

                const mode = elements.find(rr => rr.message === reactM.id)?.mode
                const create_data = await xee.db.collection('reactroles').insertOne({
                    _id: SnowflakeUtil.generate(),
                    guild: message.guild.id,
                    channel: message.channel.id,
                    message: reactM.id,
                    role: role.id,
                    once: message._flags.has('once'),
                    action: message._flags.has('remove') ? 'remove' : 'add',
                    emoji: emoji.id ? `${emoji.animated ? 'a:' : ''}${emoji.name}:${emoji.id}` : encodeURI(emoji.name),
                    mode
                }).then(r => r.ops[0])
                xee.store.reactroles.set(create_data._id, create_data)
                xee.react(reactM, emoji.id ?? emoji.name)

                return reactM.reply(`–†–æ–ª—å **${role.name}** —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –ø–æ —Ä–µ–∞–∫—Ü–∏–∏ ${_emoji}.`).catch(() => {
                    message.channel.send(`–†–æ–ª—å **${role.name}** —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –ø–æ —Ä–µ–∞–∫—Ü–∏–∏ ${_emoji}.`) //todo fix
                })
        }
    }
}
