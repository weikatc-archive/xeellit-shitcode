const { MessageEmbed } = require('discord.js')
const { findByName } = require('../../client/finder')
const { findMember, findChannel, splitMessage, parseDuration } = require('../../client/util')

const MemberData = require('../../classes/MemberData')
const Confirmation = require('../../classes/Confirmation')

module.exports = {
    command: {
        aliases: ['lv', 'lvl', 'level'],
        description: '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π —É—Ä–æ–≤–Ω–µ–π',
        usage: '[disable | reset [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] | role <—É—Ä–æ–≤–µ–Ω—å> <@—Ä–æ–ª—å> | roles | onerole | voicexp | ignore [#–∫–∞–Ω–∞–ª] | messagechannel | message <#–∫–∞–Ω–∞–ª> <—Å–æ–æ–±—â–µ–Ω–∏–µ> | cooldown | messagexp | @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <—É—Ä–æ–≤–µ–Ω—å>]',
        examples: {
            '{{prefix}}levels': '–≤–∫–ª—é—á–∏—Ç —Å–∏—Å—Ç–µ–º—É —É—Ä–æ–≤–Ω–µ–π',
            '{{prefix}}levels disable': '–æ—Ç–∫–ª—é—á–∏—Ç —Å–∏—Å—Ç–µ–º—É —É—Ä–æ–≤–Ω–µ–π',
            '{{prefix}}levels reset': '—Å–±—Ä–æ—Å–∏—Ç –≤—Å–µ —Ä–∞–Ω–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞',
            '{{prefix}}levels onerole': '–≤–∫–ª—é—á–∏—Ç –∏–ª–∏ –∂–µ –≤—ã–∫–ª—é—á–∏—Ç—å –æ–¥–Ω—É —Ä–æ–ª—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
            '{{prefix}}levels voicexp': '–≤–∫–ª—é—á–∏—Ç –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –∑–∞ –æ–±—â–µ–Ω–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ',
            '{{prefix}}levels messagechannel': '–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É: –±—É–¥–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —á–µ–ª–æ–≤–µ–∫ –ø–æ–≤—ã—Å–∏–ª —É—Ä–æ–≤–µ–Ω—å',
            '{{prefix}}levels messagexp 15 25': '–±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –æ—Ç 15 –¥–æ 25 –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            '{{prefix}}levels cooldown 30s': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö',
            '{{prefix}}levels role 10 –ö—Ä—É—Ç—ã—à': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—ã–¥–∞—á—É —Ä–æ–ª–∏ –ö—Ä—É—Ç—ã—à –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 10 —É—Ä–æ–≤–Ω—è',
            '{{prefix}}levels ignore #–∫–æ–º–∞–Ω–¥—ã': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç –∑–∞–ø—Ä–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ –∫–æ–º–∞–Ω–¥—ã',
            '{{prefix}}levels @Frigalhik 2': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç 2 —É—Ä–æ–≤–µ–Ω—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Frigalhik',
            '{{prefix}}levels message #–æ–±—â–µ–Ω–∏–µ {{member}} –ø–æ–ª—É—á–∞–µ—Ç {{level}} —É—Ä–æ–≤–µ–Ω—å': '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è'
        },
        permissions: { user: ['MANAGE_GUILD'], me: ['EMBED_LINKS'] }
    },
    execute: async function(message, args, options) {
        const levels = message.guild.data.levels
        if (!levels) {
            const toggle = await (new Confirmation(message).setContent('–í—ã —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É—Ä–æ–≤–Ω–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ?').awaitResponse())
            if (!toggle.data) return toggle.reply('–°–ª—É—á–∞–π–Ω–æ –Ω–∞–ø–∏—Å–∞–ª–∏ –ø–æ–ª—É—á–∞–µ—Ç—Å—è. –ë—ã–≤–∞–µ—Ç.')

            await message.guild.data.update({ 
                $set: { 
                    levels: {
                        oneRole: false, 
                        roles: [], 
                        ignore: [], 
                        voiceXpCount: 15,
                        messageXp: [ 15, 25 ]
            
                    } 
                } 
            })
            
            return toggle.reply('–°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –≤–∫–ª—é—á–µ–Ω–∞! üéâ ü•Ä ')
        }

        if (!args.length) return message.channel.send({
            embeds: [
                new MessageEmbed()
                    .setColor(xee.settings.color)
                    .setAuthor({ name: '–£—Ä–æ–≤–Ω–∏', iconURL: message.guild.iconURL() })
                    .setDescription(
                        message.guild.channels.cache.get(levels.message?.channel)?.permissionsFor(message.guild.me)?.has(['SEND_MESSAGES', 'VIEW_CHANNEL']) ? 
                        `__–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è__ ${levels.message.messageChannel ? '–ª–∏–±–æ –≤ –∫–∞–Ω–∞–ª–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–¥–Ω—è–ª —É—Ä–æ–≤–µ–Ω—å, –ª–∏–±–æ ' : ''}–≤ –∫–∞–Ω–∞–ª–µ <#${levels.message.channel}>:\n\`\`\`\n${levels.message.content.slice(0, 1800).replaceAll('```', '')}\`\`\`` : 
                        '–ü–æ–∫–∞-—á—Ç–æ –∑–¥–µ—Å—å –ø—É—Å—Ç–æ. –ü–æ—á–µ–º—É? –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.'
                    )
                    .addField('–ü—Ä–∏–º–µ—á–∞–Ω–∏—è', `- –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –æ–ø—ã—Ç –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ (–±—É–¥–µ—Ç –∫–∞–ø–∞—Ç—å ${levels.messageXp[1] ? `–æ—Ç ${levels.messageXp[0]} –¥–æ ${levels.messageXp[1]}` : levels.messageXp[0]} XP —Å –ø—Ä–æ–º–µ–∂—É—Ç–∫–æ–º –≤ ${xee.constructor.ruMs(levels.cooldown || 6e4, true)})\n` +
                                            `${levels.voiceXp ? `- –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö, —á—Ç–æ —Ç–æ–∂–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ø–æ—Å–æ–±–æ–º –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞\n` : ''}` +
                                            `${levels.roles?.length ? `- –ï—Å–ª–∏ –í—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –∑–∞ —É—Ä–æ–≤–Ω–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "${options.prefix}${options.usage} roles"\n` : ''}` +
                                            `${message.guild.channels.cache.get(levels.message?.channel)?.permissionsFor(message.guild.me)?.has('SEND_MESSAGES') ? `- –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–∞–Ω–∞–ª #${message.guild.channels.cache.get(levels.message.channel).name}${levels.message.time ? ` –∏ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ ${xee.constructor.ruMs(levels.message.time, true)}` : ''}` : ''}`)
                    .setFooter(levels.oneRole ? '–í—ã –∑–Ω–∞–ª–∏, —á—Ç–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–ª–µ–¥. —É—Ä–æ–≤–Ω—è —Ä–æ–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–µ–¥. —É—Ä–æ–≤–Ω–µ —Å–Ω–∏–º—É—Ç—å—Å—è?' : '')
            ]
        })

        const subcommand = args.shift().toLowerCase()

        if (subcommand === 'disable') {
            const answer = await (new Confirmation(message).setContent('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É—Ä–æ–≤–Ω–µ–π –Ω–∞ —ç—Ç–æ–π —Å–µ—Ä–≤–µ—Ä–µ? –í—Å–µ —Ä–∞–Ω–≥–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.').awaitResponse(true))
            if (answer === false) return message.channel.send('–ù–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–æ–Ω—É. –ß–µ—Å—Ç–Ω–æ.')

            await Promise.all([
                message.guild.members.cache.forEach(member => delete member.data),
                message.guild.data.update({ $set: { levels: null } }),
                xee.db.collection('members').deleteMany({ guild: message.guild.id })
            ])

            return message.channel.send('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —É—Ä–æ–≤–Ω—è—Ö —Å–µ—Ä–≤–µ—Ä–∞ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã. –ú–æ–¥—É–ª—å –æ—Ç–∫–ª—é—á–µ–Ω.')
        } else if (subcommand === 'reset') {
            if (args.length) {
                const member = await findMember(message, args.join(' '))
                if (!member) return message.channel.send('–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –º–æ–π –≤–∑–≥–ª—è–¥ –Ω–µ—Ç.')
                if (member.permissions.has('ADMINISTRATOR') && !message.member.permissions.has('ADMINISTRATOR')) return message.channel.send(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ **${member.user.tag}** –µ—Å—Ç—å –ø—Ä–∞–≤–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –£ —Ç–µ–±—è –µ–≥–æ –Ω–µ—Ç. –ö–∞–∫ —ç—Ç–æ –ø–æ–Ω–∏–º–∞—Ç—å?`)
                if (await xee.db.collection('members').countDocuments({ guild: message.guild.id, user: member.id }) === 0) return message.channel.send(`–†–∞–Ω–≥–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **${member.user.tag}** –∏ —Ç–∞–∫ –Ω–µ—Ç.`)

                await xee.db.collection('members').deleteOne({ guild: message.guild.id, user: member.id })
                await xee.store.members.delete(member.id + member.guild.id)

                member.roles.cache.filter(role => levels.roles.some(r => r.id === role.id) && 
                    message.guild.roles.cache.get(role.id)?.editable).forEach(role => member.roles.remove(role.id))
                return message.channel.send(`–†–∞–Ω–≥–æ–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **${member.user.tag}** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞.`)
            }

            const answer = await (new Confirmation(message).setContent('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω—É–ª–∏—Ç—å –≤—Å–µ —Ä–∞–Ω–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞?').awaitResponse(true))
            if (!answer) return message.channel.send('–ü–æ–Ω—è—Ç–Ω–æ... –õ–æ–∂–Ω—ã–π –≤—ã–∑–æ–≤...')

            await message.guild.members.cache.forEach(member => xee.store.members.delete(member.id + member.guild.id))
            await xee.db.collection('members').deleteMany({ guild: message.guild.id })

            message.channel.send(`–†–∞–Ω–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –æ—á–∏—â–µ–Ω—ã.${levels.roles.length ? ' –ò–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' : ''}`)
            if (!levels.roles.length) return

            const guildMembers = await message.guild.members.fetch()

            for (const role of levels.roles) {
                if (!message.guild.roles.cache.get(role.id)?.editable) continue
                const membersWithRole = guildMembers.filter(member => member.roles.cache.has(role.id))
                await Promise.all(membersWithRole.map(member => member.roles.remove(role.id)))
            }

            return message.channel.send('–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ.')
        } else if (subcommand === 'onerole') {
            await message.guild.data.update({ $set: { 'levels.oneRole': !levels.oneRole } })
            return message.channel.send( levels.oneRole ? '–¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π –∑–∞ –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏' : '–¢–µ–ø–µ—Ä—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Ä–æ–ª—å –∑–∞ —É—Ä–æ–≤–µ–Ω—å' )
        } else if (subcommand === 'roles') {
            const roles = levels.roles.filter(role => message.guild.roles.cache.has(role.id))
            if (!roles.length) return message.channel.send('–†–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–Ω–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç')
            else return splitMessage(message.channel, '```–†–æ–ª–∏ –∑–∞ —É—Ä–æ–≤–Ω–∏```\n' + roles.sort((a, b) => a.level - b.level).map(r => `<@&${r.id}> –∑–∞ ${r.level} —É—Ä–æ–≤–µ–Ω—å`).join('\n'), { char: '\n' })
        } if (subcommand === 'role') {
            if (!message.guild.members.me.permissions.has('MANAGE_ROLES')) return message.channel.send('–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π')
            if (!args.length) return message.channel.send('–¢–∞–∫ –∫–∞–∫ —Ç—ã –º–Ω–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞–µ—à—å, —Ç–æ —è —Ç–µ–±–µ –¥–∞–º —ç—Ç–æ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n|| –£–∫–∞–∂–∏ —É—Ä–æ–≤–µ–Ω—å —Ü–∏—Ñ—Ä–æ–π ||')

            const level = +args.shift()
            if (isNaN(level) || !isFinite(level)) return message.channel.send('–¶–∏—Ñ—Ä–æ–π...')
            if (level <= 0) return message.channel.send('–®—É—Ç–∫–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—É!')
            if (level > 999) return message.channel.send('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å ‚Äî 999')

            if (!args.length) return message.channel.send('–†–æ–ª—å —É–∫–∞–∂–∏, –≥–µ–Ω–∏—É—Å...')

            const role = findByName(message.guild.roles.cache, args.join(' '))
            if (!role) return message.channel.send(`–¢—ã –≤–∏–¥–∏—à—å —Ä–æ–ª—å **${args.join(' ')}**? –Ø –Ω–µ—Ç. –ê –µ—Å–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–µ—Ä–µ–∑ –æ—á–∫–∏...?`)
            if (role.id === message.guild.roles.everyone.id) return message.channel.send('–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–æ–ª—å **@everyone**!')

            const tags = role.tags
            if (tags) {
                if (tags.botId) return message.channel.send(`–†–æ–ª—å **${role.name}** –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –±–æ—Ç—É **<@!${tags.botId}**.`)
                if (tags.premiumSubscriberRole) return message.channel.send(`–†–æ–ª—å **${role.name}** –≤—ã–¥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –±—É—Å—Ç–µ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞...`)
            }

            if (role.managed) return message.channel.send(`–†–æ–ª—å—é **${role.name}** —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞–∫–∞—è-—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è.`)
            if (!role.editable) return message.channel.send(`–Ø –Ω–µ —Å–º–æ–≥—É –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª—å **${role.name}** —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å–µ—Ä–≤–µ—Ä–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –≤—ã—à–µ –º–æ–µ–π –Ω–∞–∏–≤—ã—Å—à–µ–π.`)
            if (message.member.roles.cache.size !== 1 && role.position >= message.member.roles.highest.position) return message.channel.send('–ù—É–∂–Ω–∞ —Ä–æ–ª—å –Ω–∏–∂–µ —Ç–≤–æ–µ–π –Ω–∞–∏–≤—ã—Å—à–µ–π...')

            const exists = levels.roles.some(l => l.id === role.id && l.level === level)
            if (exists) message.guild.data.update({ $pull: { 'levels.roles': { id: role.id, level } } })
            else message.guild.data.update({ $push: { 'levels.roles': { id: role.id, level } } })

            message.channel.send(!exists ? `–†–æ–ª—å **${role.name}** –±—ã–ª–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∫–∞–∫ —Ä–æ–ª—å –∑–∞ **${level}** —É—Ä–æ–≤–µ–Ω—å.`
                : `–†–æ–ª—å **${role.name}** –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ **${level}** —É—Ä–æ–≤–Ω—è.`)

            const users = await xee.db.collection('members').find({ guild: message.guild.id }).toArray()
            return users.filter(user => MemberData.xpMethod(user.xp, 'level') === level).forEach(async user => {
                const member = await message.guild.members.fetch(user.user)
                member.roles[exists ? 'remove' : 'add'](role, `—Ä–æ–ª—å –∑–∞ ${level} —É—Ä–æ–≤–µ–Ω—å ${exists ? '—É–¥–∞–ª–µ–Ω–∞' : '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}`)
            })
        } else if (subcommand === 'ignore') {
            const ignore = levels.ignore?.filter(c => message.guild.channels.cache.has(c)) || []
            if (!args.length) return splitMessage(message.channel, (ignore?.length ? 
                '```–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –±–æ—Ç–æ–º –∫–∞–Ω–∞–ª—ã```\n' + ignore.map((c, i) => `${++i}. <#${c}>`) : '' + `\n–ß—Ç–æ–±—ã –∑–∞–Ω–µ—Å—Ç–∏ –∫–∞–Ω–∞–ª –≤ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`${options.prefix}${options.usage} ignore <#–∫–∞–Ω–∞–ª>\``), { char: '\n' })

            const channel = findChannel(message, args.join(' '), { text: true })
            if (!channel) return message.channel.send(`–¢—ã —É–≤–µ—Ä–µ–Ω –≤ –Ω–∞–ª–∏—á–∏–∏ –∫–∞–Ω–∞–ª–∞ ${args.join(' ').slice(0, 60)} –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ?`)
            if (!channel.viewable) return message.channel.send(`–ó–∞—á–µ–º? –Ø –∏ —Ç–∞–∫ –Ω–µ –º–æ–≥—É –≤–∏–¥–µ—Ç—å —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ ${channel}`)

            if (!message.guild.data.levels.ignore) await message.guild.data.update({ $set: { 'levels.ignore': [] } })
            await message.guild.data.update({ [ignore.includes(channel.id) ? '$pull' : '$push']: { 'levels.ignore': channel.id } })

            return message.channel.send(message.guild.data.levels.ignore.includes(channel.id) ? 
                `${channel} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤. –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ –≤ –Ω–µ–º –æ–ø—ã—Ç –ø–æ–≤—ã—à–∞—Ç—å—Å—è –Ω–µ –±—É–¥–µ—Ç.` : 
                `${channel} –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.`
            )
        } else if (subcommand === 'messagechannel') {
            const exists = message.guild.channels.cache.get(levels.message?.channel)?.permissionsFor(message.guild.me)?.has('SEND_MESSAGES')
            if (!exists) return message.channel.send('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è.')

            await message.guild.data.update({ $set: { 'levels.message.messageChannel': !levels.message.messageChannel } })
            return message.channel.send(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã.`)
        } else if (subcommand === 'message') {
            const exists = message.guild.channels.cache.get(levels.message?.channel)?.permissionsFor(message.guild.me)?.has('SEND_MESSAGES')

            if (!args.length) {
                if (!exists) return message.channel.send('–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.')

                const answer = await (new Confirmation(message).setContent('–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è?').awaitResponse(true))
                if (!answer) return message.channel.send('–ù—É –ª–∞–¥–Ω–æ —É–∂...')

                await message.guild.data.update({ $set: { 'levels.message': null } })
                return message.channel.send('–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ.')
            }

            const channel = findChannel(message, args.shift(), { text: true })
            if (!channel) return message.channel.send('–¢–∞–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–∫–ª—é—á–∏ –º–æ–∑–≥–∏.')
            if (!channel.viewable || !channel.permissionsFor(message.member).has('VIEW_CHANNEL')) return message.channel.send(`–Ø –ø—Ä–∏—Ç–≤–æ—Ä—é—Å—å, —á—Ç–æ –Ω–µ –≤–∏–∂—É —Ç–∞–∫–æ–π –∫–∞–Ω–∞–ª.`)
            if (!channel.permissionsFor(message.member).has('SEND_MESSAGGES')) return message.channel.send(`–¢—ã —Ç–æ—á–Ω–æ –º–æ–∂–µ—à—å –ø–∏—Å–∞—Ç—å –≤ –∫–∞–Ω–∞–ª ${channel}? –û–±–ª–æ–º`)
            if (!channel.permissionsFor(message.guild.me).has('SEND_MESSAGES')) return message.channel.send(`–Ø –Ω–µ –º–æ–≥—É –ø–∏—Å–∞—Ç—å –≤ –∫–∞–Ω–∞–ª ${channel}, –ø—Ä–æ–≤–µ—Ä—å –º–æ–∏ –ø—Ä–∞–≤–∞.`)

            let _time = 0
            if (args.length && parseDuration(args[0])) {
                _time = parseDuration(args.shift())
                if (_time <= 1000) return message.channel.send('–ê –≤ —á–µ–º —Ç–æ–≥–¥–∞ –≤–æ–æ–±—â–µ —Å–º—ã—Å–ª —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?')
                else if (_time > 120000) return message.channel.send('–ú–µ–Ω—å—à–µ 2-—Ö –º–∏–Ω—É—Ç –ø–æ–∂–∞–ª—É–π—Å—Ç–∞...')
            }

            if (!args.length) return message.channel.send('–ß—Ç–æ –ø–∏—Å–∞—Ç—å-—Ç–æ?')
            const content = args.join(' ').slice(0, 1800)

            let _message = `–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ ${channel}.`

            if (exists) {
                if (levels.message.content === content && levels.message.channel === channel.id) return message.channel.send('–ù–∏—á–µ–≥–æ –∂–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å...')
                if (message.channel.permissionsFor(message.guild.me).has(['READ_MESSAGE_HISTORY', 'ADD_REACTIONS'])) {
                    await message.channel.send('–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ. –ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å –µ–≥–æ –∏–ª–∏ –Ω–µ—Ç.')

                    const answer = await (
                        new Confirmation(message)
                            .setContent({
                                embeds: [
                                    new MessageEmbed()
                                        .setColor(xee.settings.color)
                                        .addField('–î–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è', xee.commands.resolve('goodbye').format(levels.message.content))
                                        .addField('–ü–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è', xee.commands.resolve('goodbye').format(content))
                                ]
                            })
                            .awaitResponse()
                    )
                    
                    answer.delete()
                    if (answer.data === false) return message.channel.send('–û–∫')
                }
                _message = '–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ.'
            }


            await message.guild.data.update({ $set: { 'levels.message': {
                content, channel: channel.id, time: _time || null
            } } })

            return message.channel.send(_message + (_time ? ` –ö—Å—Ç–∞—Ç–∏, —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è —Å–ø—É—Å—Ç—è ${xee.constructor.ruMs(_time, true)}, –∫—Ä—É—Ç–æ, –Ω–µ –ø—Ä–∞–≤–¥–∞ –ª–∏?` : ''))
        } else if (subcommand === 'voicexp') {
            await message.guild.data.update({ $set: { 'levels.voiceXp': !message.guild.data.levels.voiceXp } })

            if (!message.guild.data.levels.voiceXp) {
                xee.db.collection('members').updateMany({ guild: message.guild.id }, { $unset: {   
                    inVoice: '', joinTime: '', voiceTime: ''
                } })
            } else {
                for (const channel of message.guild.channels.cache.values()) {
                    if (channel.type !== 'GUILD_VOICE') continue
                    if (channel.id === message.guild.afkChannelId) continue

                    const channelSize = channel.members.filter(member => !member.voice?.mute && !member.user.bot).size
                    if (channelSize < 1) continue

                    for (const member of channel.members.values()) {
                        const memberData = await member.getData()
                        memberData.startVoice()
                    }
                }
            }

            return message.channel.send(message.guild.data.levels.voiceXp ? '–¢–µ–ø–µ—Ä—å –æ–ø—ã—Ç –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∑–∞ –æ–±—â–µ–Ω–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö.' : '–û–ø—ã—Ç –∑–∞ –≥–æ–ª–æ—Å–æ–≤–æ–π –æ–Ω–ª–∞–π–Ω –±–æ–ª—å—à–µ –Ω–µ –∫–∞–ø–∞–µ—Ç...')
        } else if (subcommand === 'cooldown') {
            if (args.length && !parseDuration(args[0])) return message.channel.send('–ë–∞–ª–¥–∞, —É–∫–∞–∂–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å')

            const cooldown = parseDuration(args[0] || '1m')
            if (cooldown > 12e4 || 5e3 > cooldown) return message.channel.send('–ö—É–ª–¥–∞—É–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 2-—Ö –º–∏–Ω—É—Ç, –Ω–æ –∏ –º–µ–Ω—å—à–µ 5 —Å–µ–∫—É–Ω–¥') 

            await message.guild.members.cache.forEach(user => clearTimeout(user.data?.cooldown))
            await message.guild.data.update({ $set: { 'levels.cooldown': cooldown } })
            return message.channel.send(`–ö—É–ª–¥–∞—É–Ω –ø–æ–ª—É—á–µ–Ω–∏—è XP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: **${xee.constructor.ruMs(cooldown)}**`)
        } else if (subcommand === 'messagexp') {
            if (!args.length) return message.channel.send('–£–∫–∞–∂–∏ —Å–∫–æ–ª—å–∫–æ XP –±—É–¥–µ—Ç –∫–∞–ø–∞—Ç—å —Å —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–∏–º–µ—Ä—ã:\n' + 
                `\`${options.prefix}${options.usage} messgaexp 10\`: —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å 10 XP –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n` +
                `\`${options.prefix}${options.usage} messgaexp 15 50\`: —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –æ—Ç 15 –¥–æ 50 XP`
            )

            const entries = []

            const verifyNumber = (number) => {
                if (isNaN(number) && !isFinite(number)) return message.channel.send(`–ì–¥–µ –≤ ${number} —Ç—ã –≤–∏–¥–∏—à—å —á–∏—Å–ª–æ?`)
                if (number > 50) return message.channel.send('–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 50')
                if (number < 5) return message.channel.send(`${number} < 5, –ø–æ–Ω–∏–º–∞–µ—à—å?`)
            }

            if (verifyNumber(+args[0]) instanceof Promise) return
            else entries.push(+args[0])

            if (args[1] && verifyNumber(+args[1]) instanceof Promise) return
            else if (entries[0] !== +args[1]) entries.push(+args[1])
            if (entries[0] > entries[1]) entries.reverse()

            await message.guild.members.cache.forEach(member => clearTimeout(member.data?.cooldown))
            await message.guild.data.update({ $set: { 'levels.messageXp': entries } })
            return message.channel.send(`–¢–µ–ø–µ—Ä—å –∑–∞ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å **${entries[1] ? `–æ—Ç ${entries[0]} –¥–æ ${entries[1]}` : entries[0]} XP**!`)
        } else {
            const member = await findMember(message, subcommand)
            if (!member) return message.channel.send('–¢–∞–∫–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤–æ–æ–±—â–µ-—Ç–æ –Ω–µ—Ç.')
            if (member.id === message.author.id && !member.permissions.has('ADMINISTRATOR')) return message.channel.send('–ù–µ—Ç =\(')
            if (member.permissions.has('ADMINISTRATOR') && !message.member.permissions.has('ADMINISTRATOR')) return message.channel.send('–¢—ã –Ω–µ –º–æ–∂–µ—à—å —Ç–∞–∫ —Å–¥–µ–ª–∞—Ç—å!')

            if (!args.length) return message.channel.send('–ù–∞ –∫–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä—ã–≥–∞—Ç—å-—Ç–æ?')
            const toLevel = +args.shift()
            if (isNaN(toLevel) || !isFinite(toLevel)) return message.channel.send('–°–æ–º–Ω–µ–≤–∞—é—Å—å, —á—Ç–æ —ç—Ç–æ —Ü–∏—Ñ—Ä–∞...')
            if (toLevel <= 0) return message.channel.send('–ù–µ –Ω–∞–¥–æ–µ–ª–æ?')
            if (toLevel > 999) return message.channel.send('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å ‚Äî 999')

            const memberData = await member.getData()
            if (memberData.level === toLevel) return message.channel.send(`–£ **${member.user.tag}** —É–∂–µ –±—ã–ª ${toLevel} —É—Ä–æ–≤–µ–Ω—å (–∫–æ–≥–¥–∞?)`)

            memberData.xp = 0
            memberData.level = toLevel
            memberData.totalXp = MemberData.levelToXp(toLevel)

            memberData.fetchRoles()
            memberData.update({ $set: { xp: memberData.totalXp } })
            return message.channel.send(`**${member.user.tag}** –ø–æ–ª—É—á–∞–µ—Ç ${toLevel} —É—Ä–æ–≤–µ–Ω—å. –û–≥–æ?`)
        }
    }
}
