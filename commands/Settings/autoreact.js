const { MessageEmbed } = require('discord.js')
const { findChannel, parseEmoji } = require('../../client/util')

const Confirmation = require('../../classes/Confirmation')

module.exports = {
    command: {
        description: '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π',
        usage: '<setup | delete> <#channel>',
        examples: {
            '{{prefix}}autoreact': '–ø–æ–∫–∞–∂–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
            '{{prefix}}autoreact setup #memes': '–¥–æ–±–∞–≤–∏—Ç –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç –≤ –∫–∞–Ω–∞–ª–µ #memes',
            '{{prefix}}autoreact delete #test': ' –≤—ã–∫–ª—é—á–∏—Ç –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç –≤ –∫–∞–Ω–∞–ª–µ #test'
        },
        flags: ['images'],
        aliases: ['ar'],
        permissions: {
            me: ['EMBED_LINKS'],
            user: ['MANAGE_CHANNELS', 'MANAGE_GUILD', 'READ_MESSAGE_HISTORY', 'ADD_REACTIONS']
        }
    },
    execute: async function (message, args, options) {
        let channel = null
        let elements = message.guild.data.utils.autoreact.filter(x =>
            message.guild.channels.cache.has(x.channel) && x.emojis.filter(x => !x.id ? true : xee.client.emojis.cache.has(x.id)).length !== 0)

        switch (args[0]?.toLowerCase()) {
            case 'remove':
            case 'delete':
                if (!args[1]) channel = message.channel
                if (args[1]?.toLowerCase() === 'all') {
                    if (!elements.length) return message.channel.send('–î–µ—Ä–∂—É –≤ –∫—É—Ä—Å–µ, –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç –≤–µ–∑–¥–µ –≤—ã–∫–ª—é—á–µ–Ω')
                    
                    const __answer = await (new Confirmation(message).setContent('–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –≤–µ–∑–¥–µ —É–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç?').awaitResponse(true))
                    if (__answer === false) return __answer.reply('–Ø-—Ç–æ —É–∂ –¥—É–º–∞–ª, —á—Ç–æ —Ç—ã —Å–µ—Ä—å—ë–∑–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω...')

                    await message.guild.data.update({ $set: { 'utils.autoreact': [] } })
                    return __answer.reply('–ù–µ –∑–Ω–∞—é, –∫ —Å—á–∞—Å—Ç—å—é, –∏–ª–∏ –Ω–µ—Ç, –Ω–æ —Ç—ã –≤—Å—ë —É–¥–∞–ª–∏–ª')
                }
                channel = await findChannel(message, args.slice(1).join(' '), { text: true })
                if (!channel) return message.channel.send('–¢–∞–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ')
                if (!channel.permissionsFor(message.member).has([ 'VIEW_CHANNEL', 'SEND_MESSAGES' ])) return message.channel.send('üòí')
                if (!message.guild.data.utils.autoreact.some(x => x.channel === channel.id)) return message.channel.send(`–í –∫–∞–Ω–∞–ª–µ ${channel} –Ω–µ—Ç –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç–∞...`)

                await message.guild.data.update({ $pull: { 'utils.autoreact': { channel: channel.id } } })
                return message.channel.send(`–ê–≤—Ç–æ—Ä–µ–∞–∫—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞ ${channel} –±—ã–ª —É–±—Ä–∞–Ω`)

            case 'setup':
                channel = (args[1] ? await findChannel(message, args.join(' ')) : null) || message.channel
                if (!channel.isText()) return message.channel.send(channel.name + ' –Ω–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª')
                if (!channel.permissionsFor(message.member).has(['READ_MESSAGE_HISTORY', 'ADD_REACTIONS', 'VIEW_CHANNEL'])) 
                    return message.channel.send(`–£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ ${channel}`)

                if (!channel.viewable) return message.channel.send(`–Ø –Ω–µ –º–æ–≥—É –ø—Ä–æ—Å–º–∞—Ä—Ç–∏–≤–∞—Ç—å –∫–∞–Ω–∞–ª ${channel}. –ß—Ç–æ —É –º–µ–Ω—è —Ç–∞–º –ø–æ –ø—Ä–∞–≤–∞–º...?`)
                if (!channel.permissionsFor(message.guild.me).has(['READ_MESSAGE_HISTORY', 'ADD_REACTIONS']))
                    return message.channel.send(`–Ø –Ω–µ –º–æ–≥—É —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ ${channel}. –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ —É –º–µ–Ω—è –ø—Ä–∞–≤–æ –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–µ–∞–∫—Ü–∏–π –∏ –ø—Ä–∞–≤–æ –Ω–∞ —á—Ç–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏`)

                if (message.guild.data.utils.autoreact.some(x => x.channel === channel.id)) {
                    let element = message.guild.data.utils.autoreact.find(x => x.channel === channel.id)
                    if (element.emojis.length === 20) return message.channel.send('–ö–∞–∂–µ—Ç—Å—è, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É–∂–µ 20 —Ä–µ–∞–∫—Ü–∏–π. –ü–æ—ç—Ç–æ–º—É, –¥–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è')

                    const _answer = await (new Confirmation(message).setContent('–ê–≤—Ç–æ—Ä–µ–∞–∫—Ç –≤ –∫–∞–Ω–∞–ª–µ {{channel}} —É–∂–µ –µ—Å—Ç—å, –Ω–æ, —Ç—ã –º–æ–∂–µ—à—å –µ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å. –í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π...'.parse({ channel })).awaitResponse())
                    if (_answer === false) return _answer.reply('–ù—É –∫–∞–∫ —Ö–æ—á–µ—à—å, –≤—ã–±–æ—Ä —Ç–≤–æ–π')

                    return this.add(message, element, options)
                }
                this.setup(message, channel, options)
                break

            default:
                elements = elements.slice(0, 12)
                const embed = new MessageEmbed()
                    .setColor(xee.settings.color)
                    .setDescription('–ê–≤—Ç–æ—Ä–µ–∞–∫—Ç ‚Äî —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∞–∫—Ü–∏–π, –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è.‚Äã')
                    .setAuthor({ name: '–ê–≤—Ç–æ—Ä–µ–∞–∫—Ç', iconURL: message.guild.iconURL({ size: 2048, dynamic: true }) })
                elements.forEach(x => embed.addField('\u200b', `${message.guild.channels.cache.get(x.channel)}\n\u2514 ${x.emojis.filter(x => !x.id ? true : xee.client.emojis.cache.has(x.id)).map(x => x.id ? xee.client.emojis.cache.get(x.id) : x.name).join(', ')}`))

                if (!elements.length) return message.channel.send({ content: `–ü–æ—Ö–æ–∂–µ, –∑–¥–µ—Å—å –ø—É—Å—Ç–æ. –≠—Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π: \`‚Äã${options.prefix}autoreact setup\`‚Äã.`, embeds: [ embed ] })
                message.channel.send({ embeds: [ embed ] })
                break
        }
    },
    setup: function (message, channel, options) {
        message.channel.send('–ù–∞–ø–∏—à–∏ —ç–º–æ–¥–∑–∏ __–≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª__').then(async _message => {
            let collector = await message.channel.awaitMessages({
                max: 1,
                time: 30000,
                filter: x => x.author.id === message.author.id
            })
            if (!collector.size || !collector.first().cleanContent) {
                if (_message?.deletable) _message.delete().catch(() => true)
                return
            }
            let messageArray = collector.first().content.split(/ +/g)
            messageArray = messageArray.map(x => parseEmoji(x)).filter(x => x !== null).slice(0, 19)
            if (!messageArray[0]) return _message.delete().catch(() => true)
            let data = {
                channel: channel.id,
                emojis: messageArray,
                options: {}
            }
            if (message._flags.has('images')) data.options.images = true

            await message.guild.data.update({ $push: { 'utils.autoreact': data } })
            return _message.edit(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ${channel}!`).catch(() => true)
        })
    },
    add: async function (message, element, options) {
        let avaible = 20 - element.emojis.length
        message.channel.send(`**–û—Ç–ø—Ä–∞–≤–ª—è–π —ç–º–æ–¥–∑–∏ –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª, –¥–æ–±–∞–≤–ª—é**. –ö—Å—Ç–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë ${avaible} —ç–º–æ–¥–∑–∏, –ø—Ä–∞–≤–¥–∞ –∫–ª–∞—Å—Å–Ω–æ?`).then(async _message => {
            let collector = await message.channel.awaitMessages({
                max: 1,
                time: 30000,
                filter: x => x.author.id === message.author.id
            })
            if (!collector.size || !collector.first().cleanContent) return _message.edit('–ú–Ω–µ –Ω–µ –Ω—É–∂–Ω–∞ –ø—É—Å—Ç–æ—Ç–∞, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –º–Ω–µ –¥–∞–ª').catch(() => true)
            let messageArray = collector.first().content.split(/ +/g)
            messageArray = messageArray.map(x => parseEmoji(x)).filter(x => x !== null && !element.emojis.some(_x => (_x.id || _x.name) === (x.id || x.name))).slice(0, avaible - 1)
            if (!messageArray.length) return _message.edit('–°–ø–∞—Å–∏–±–æ, –Ω–µ –Ω–∞–¥–æ').catch(() => true)
            if (_message.deletable) _message.delete()

            element.emojis.push(...messageArray)
            message.guild.data.utils.autoreact = message.guild.data.utils.autoreact.filter(x => x.channel !== element.channel)
            message.guild.data.utils.autoreact.push(element)

            await message.guild.data.update({ $set: { 'utils.autoreact': message.guild.data.utils.autoreact } })
            return message.channel.send(`–û–∫–µ–π, —è –¥–æ–ø–æ–ª–Ω–∏–ª –∞–≤—Ç–æ—Ä–µ–∞–∫—Ç. –ù–æ–≤—ã–µ —ç–º–æ–¥–∑–∏: ${messageArray.map(x => x.id ? `<${x.animated ? 'a' : ''}:${x.name}:${x.id}>` : x.name)}`).catch(() => true)
        })
    }
}
