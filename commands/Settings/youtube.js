const { MessageEmbed } = require('discord.js')
const { findChannel } = require('../../client/util')
const fetch = require('../../client/fetch')

const Confirmation = require('../../classes/Confirmation')

module.exports = {
    command: {
        hidden: true,
        aliases: ['yt'],
        description: '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π —Å YouTube',
        fullDescription: '**–ó–∞–º–µ–Ω–∏—Ç–µ–ª–∏**:\n' + 
            [
                '`{{title}}`: –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–ª–∏ –ø—Ä—è–º–æ–π —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏',
                '`{{author}}`: –∏–º—è –∞–≤—Ç–æ—Ä–∞ –≤–∏–¥–µ–æ',
                '`{{author.id}}`: Id –∫–∞–Ω–∞–ª–∞ –∞–≤—Ç–æ—Ä–∞',
                '`{{url}}`: —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ'
            ].map(c => '> ' + c).join('\n') + '\n',
        usage: '[add <#–∫–∞–Ω–∞–ª> <id youtube –∫–∞–Ω–∞–ª–∞> | delete <–∏–º—è –∫–∞–Ω–∞–ª–∞> | —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è]',
        permissions: {
            user: ['MANAGE_GUILD'],
            me: ['EMBED_LINKS']
        }
    },
    execute: async function(message, args, options) {
        const notifications = await xee.db.collection('notifications').find({
            type: 'youtube',
            guild: message.guild.id
        }).toArray()

        if (!notifications.length && (
            !args.length || args[0].toLowerCase() !== 'add'
        )) return message.channel.send(`–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ / —Å—Ç—Ä–∏–º–∞—Ö, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`${options.prefix}${options.usage} add <#–∫–∞–Ω–∞–ª> <id –∫–∞–Ω–∞–ª–∞>\``)
        else if (!args.length) return message.channel.send({
            embeds: [
                new MessageEmbed()
                .setAuthor({ name: '–û–ø–æ–≤–µ—â–µ–Ω–∏—è —Å YouTube', iconURL: message.guild.iconURL({ size: 2048, dynamic: true }) })
                .setDescription(`__–®–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π__:\n\`\`\`\n${notifications[0].message}\n\`\`\``)
                .setColor(xee.settings.color)
                .addField('–ö–∞–Ω–∞–ª—ã', 
                    notifications.map(({ channel, channelName }) => {
                        return `**${channelName}**: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ ${message.guild.channels.cache.get(channel).toString()}.`
                    }).join('\n')
                )
            ]
        })

        const subcommand = args.shift()
        let channelId
        let channelName

        switch (subcommand.toLowerCase()) {
            case 'add':
                if (notifications.length >= 15) return message.channel.send('–¢–∞–∫ –º–Ω–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –∏–º–µ—Ç—å –Ω–µ–ª—å–∑—è.')
                if (args.length < 2) return message.channel.send(`–¢–µ–±–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å **–∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π** –∏ **ID —é—Ç—É–± –∫–∞–Ω–∞–ª–∞**`)

                const channel = findChannel(message, args.shift(), { text: true })
                if (!channel || !channel.permissionsFor(message.member).has('VIEW_CHANNEL')) return message.channel.send('–†–∞–∑–≤–µ —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...?')
                if (!channel.viewable) return message.channel.send('–ú–Ω–µ –Ω—É–∂–Ω–æ –≤–∏–¥–µ—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª ' + channel.toString() + '.')
                if (!channel.permissionsFor(message.guild.me).has('SEND_MESSAGES')) return message.channel.send(`–Ø –Ω–µ –º–æ–≥—É –æ—Ç—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ ${channel}!`)
                if (!channel.permissionsFor(message.member).has('SEND_MESSAGES')) return message.channel.send(`–£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤ ${channel}. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ.`)

                const channelInfo = await this.getChannel(args.shift())
                channelId = channelInfo.id?.channelId || channelInfo.snippet?.channelId
                channelName = channelInfo.snippet?.channelTitle

                if (!channelId) return message.channel.send('–ù–µ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç–∞–∫–æ–π –∫–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç :face_in_clouds:')
                if (notifications.some(c => c.channelId === channelId)) return message.channel.send(`–û–ø–æ–≤–µ—â–µ–Ω–∏—è –¥–ª—è **${channelName}** —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã...`)

                await xee.db.collection('notifications').insertOne({
                    message: notifications[0]?.message || '**{{author}}** –≤—ã–ø—É—Å—Ç–∏–ª –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ!\n{{url}}',
                    guild: message.guild.id,
                    channel: channel.id,
                    type: 'youtube',
                    channelName: channelName,
                    channelId
                })

                if (await xee.db.collection('notifications').countDocuments({ type: 'youtube', channelId }) === 1) this.sendHook(channelId)
                return message.channel.send(`–û–∫! –¢–µ–ø–µ—Ä—å –µ—Å–ª–∏ **${channelName}** –≤—ã–ø—É—Å—Ç–∏—Ç –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏–ª–∏ –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø—Ä—è–º—É—é —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é, —è –æ–ø–æ–≤–µ—â—É –æ–± —ç—Ç–æ–º –≤ –∫–∞–Ω–∞–ª–µ ${channel}.`)

            case 'delete':
            case 'remove':
                if (!args.length) return message.channel.send('–ê –∏–º—è —é—Ç—É–±-–∫–∞–Ω–∞–ª–∞ —É–∫–∞–∂–∏. –ù–µ –∑–∞—Å—Ç–∞–≤–ª—è–π –º–µ–Ω—è –ø–ª–∞–∫–∞—Ç—å :sob:')

                const deleteChannel = notifications.find(c => [c.channelName, c.channelId].includes(args.join(' ')))
                if (!deleteChannel) return message.channel.send('–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω... üßê')

                if (notifications.length === 1) {
                    const removeConfirmation = await (
                        new Confirmation(message)
                            .setContent(`–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞ **${deleteChannel.items[0].snippet.channelTitle}**? –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è —à–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω!`)
                    ).awaitResponse()
                    if (removeConfirmation.message.deletable) removeConfirmation.message.delete().catch(() => null)
                    if (!removeConfirmation.data) return
                }

                channelId = deleteChannel.channelId
                await xee.db.collection('notifications').deleteOne({
                    guild: message.guild.id,
                    type: 'youtube',
                    channelId
                })

                if (await xee.db.collection('notifications').countDocuments({ type: 'youtube', channelId }) === 0) this.sendHook(channelId, 'unsubscribe')
                return message.channel.send(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∫–∞–Ω–∞–ª–∞ **${deleteChannel.channelName}** –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç.`)

            default:
                args.unshift(subcommand)

                if (args.join(' ').slice(0, 2000) === notifications[0].message) return message.channel.send('–ê –≤ —á–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ...?')
                const confirmation = await (new Confirmation(message).setContent('–í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö?')).awaitResponse()
                if (!confirmation.data) return confirmation.message.deletable && confirmation.message.delete().catch(() => null)

                await xee.db.collection('notifications').updateMany({ guild: message.guild.id, type: 'youtube' }, {
                    $set: {
                        message: args.join(' ').slice(0, 2000)
                    }
                })

                return confirmation.reply('–°–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ!')
        }

    },
    sendHook: function(channelId, mode = 'subscribe') {
        console.log((mode === 'subscribe' ? '–ü–æ–¥–ø–∏—Å—ã–≤–∞—é—Å—å –Ω–∞ –∫–∞–Ω–∞–ª ' : '–û—Ç–ø–∏—Å—ã–≤–∞—é—Å—å –æ—Ç –∫–∞–Ω–∞–ª–∞ ') + channelId)
        return fetch('https://pubsubhubbub.appspot.com/', { 
            method: 'POST', 
            form: { 
                'hub.topic': 'https://www.youtube.com/xml/feeds/videos.xml?channel_id=' + channelId, 
                'hub.callback': 'https://xeellit-app.herokuapp.com/webhooks/youtube', 
                'hub.secret': '<restricted>',
                'hub.mode': mode
            } 
        })
    },
    getChannel: async function(channelId) {
        return fetch('https://www.googleapis.com/youtube/v3/search', {
            query: {
                q: channelId,
                part: 'snippet',
                key: '<restricted>'
            }
        }).then(res => res.items?.shift() || channelId).catch(() => channelId)
    }
}
