const Events = require('../../classes/Events')

module.exports = {
    command: {
        ownerOnly: true,
        description: '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞',
        aliases: ['rl'],
        usage: '[commands | events | –∏–º—è –∫–æ–º–∞–Ω–¥—ã]',
        examples: {
            '{{prefix}}reload': '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç —è–¥—Ä–æ –±–æ—Ç–∞',
            '{{prefix}}reload events': '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ –∏–≤–µ–Ω—Ç—ã',
            '{{prefix}}reload commands': '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã',
            '{{prefix}}reload help': '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç –∫–æ–º–∞–Ω–¥—É help',
            '{{prefix}}reload core': '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –º–æ–¥—É–ª–µ "core"'
        }
    },
    execute: async function (message, args, options) {
        const send = content => message.channel.send(`${content || ''} \`üîÅ\``).then(message => setTimeout(() => message.delete(), 2000))
        if (!args.length) {
            await send('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é —è–¥—Ä–æ...')
            Object.keys(require.cache).forEach(module => delete require.cache[module])
            xee.client.destroy() delete xee
            xee = null
            return require('../../boi')
        }

        if (args[0].toLowerCase() === 'commands') {
            xee.commands.clear()
            xee.commands.loadCommands()
            return send(`–ö–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...`)
        } else if (args[0].toLowerCase() === 'events') {
            xee.client.removeAllListeners()
            new Events('./events/').loadFolder()
            return send(`–ò–≤–µ–Ω—Ç—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è...`)
        }

        const command = xee.commands.resolve(args[0].toLowerCase())
        let isModule = false

        if (!command) {
            if (!xee.commands.modules.includes(args[0].toLowerCase())) return message.channel.send(`–ö–æ–º–∞–Ω–¥—ã –∏–ª–∏ –º–æ–¥—É–ª—è —Å –∏–º–µ–Ω–µ–º \`${args[0]}\` –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
            isModule = true
            xee.commands.filter(c => c.group === args[0].toLowerCase()).map(c => xee.commands.reload(c.name))
        } else xee.commands.reload(command.name)
        return send(`${isModule ? '–ú–æ–¥—É–ª—å' : '–ö–æ–º–∞–Ω–¥–∞'} \`${command?.name || args[0].toLowerCase()}\` ${isModule ? '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω' : '–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞'}`)
    }
}